name: Python Test Coverage

on:
  workflow_call:
  workflow_dispatch:
 
permissions:
  contents: read

jobs:
  build-python-coverage:
    name: Enforce Python Unit Test Coverage
    runs-on: ubuntu-latest
    steps:

    - name: Checkout sources
      uses: actions/checkout@v3

    - name: Setup project build variables
      run: |
        for i in `cat conf/buildvars.properties` ; do echo "$i" >> $GITHUB_ENV ; done

    - name: Setup Python ${{ env.PYTHON_VERSION }} interpreter
      uses: actions/setup-python@v3
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Setup Python dependency modules
      run: |
        python -m pip install --upgrade pip
        pip install -r ./conf/python/build.txt -r ./conf/python/runtime.txt

    - name: Ensure Unit Test coverage is high enough 
      run: |
        # compute and display coverage
        python -m nose2 --with-coverage -F -s ${{ env.UNIT_TEST_DIR }} -t . 2> /tmp/coverage
        cat /tmp/coverage
        # get coverage metrics
        expectedTotal=${{ env.PYTHON_COVERAGE_MIN_TOTAL }}
        foundTotal=$(grep "TOTAL" /tmp/coverage | cut -f41 -d' ' | sed 's/\%//g')
        expectedProcessor=${{ env.PYTHON_COVERAGE_MIN_PROCESSOR }}
        foundProcessor=$(grep "processor.py" /tmp/coverage | cut -f34 -d' ' | sed 's/\%//g')
        echo "[INFO] Global    code coverage expected=$expectedTotal found=$foundTotal"
        echo "[INFO] Processor code coverage expected=$expectedProcessor found=$foundProcessor"
        # acceptance
        if [ $foundTotal -lt $expectedTotal ]; then
          echo "[ERROR] Current global coverage is below minimal treshold !"
          exit 255
        fi
        if [ $foundProcessor -lt $expectedProcessor ]; then
          echo "[ERROR] Current processor coverage is below minimal treshold !"
          exit 255
        fi


    

  